version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
    volumes:
      - ./backend/shared:/app/shared
    environment:
      WEBHOOK_URL: ${WEBHOOK_URL}
      INTEGRATION_URL: ${INTEGRATION_URL}
      INTEGRATION_CODE: ${INTEGRATION_CODE}
      INTEGRATION_TOKEN: ${INTEGRATION_TOKEN}
      POSTGRES_URL: ${POSTGRES_URL}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      FERNET_KEY: ${FERNET_KEY}
      REDIS_URL: ${REDIS_URL}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_CACHE_TIME: ${REDIS_CACHE_TIME}
      PROMETHEUS_JOBS_PATH: /app/shared/jobs.json
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"

  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}"]
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./backend/config/prometheus.yml:/config/prometheus.yml:ro
      - ./backend/shared:/etc/prometheus:ro
    command:
      - --config.file=/config/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - backend

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
      - ./backend/config/grafana_dashboard.json:/etc/grafana/provisioning/dashboards/telegram_corp_ai.json:ro
    ports:
      - "3001:3000"
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  grafana_data:
